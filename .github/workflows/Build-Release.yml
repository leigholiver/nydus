name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  Create-Release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Version
        id: version
        run: |
          echo "##[set-output name=version;]$(cat VERSION)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: ${{ steps.version.outputs.version }}
          draft: true
          prerelease: false

    outputs:
      version: ${{ steps.version.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  Build-Windows:
    needs: Create-Release
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run build script
      shell: cmd
      run: |
        build-win.bat

    - name: Create archive
      run: |
        Compress-Archive ./dist/* "${{needs.Create-Release.outputs.version}}.zip"

    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: dist
        path: dist

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.Create-Release.outputs.upload_url }}
        asset_path: ./${{ needs.Create-Release.outputs.version }}.zip
        asset_name: nydus-${{ needs.Create-Release.outputs.version }}-windows.zip
        asset_content_type: application/zip

  Build-Linux:
    needs: Create-Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run build script
      run: |
        ./build-linux.sh

    - name: Create archive
      run: |
        (cd dist; zip -r ../$(cat ../VERSION).zip . )

    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: dist
        path: dist

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.Create-Release.outputs.upload_url }}
        asset_path: ./${{needs.Create-Release.outputs.version}}.zip
        asset_name: nydus-${{needs.Create-Release.outputs.version}}-linux.zip
        asset_content_type: application/zip
